<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="MetroLayout">

        <!--
              support versions. All attributes not present in ViewGroup/View are
              redefined in the support library namespace.
        -->


        <!--
        The orientation property is not used during layout. It is only used to
        allocate row and column parameters when they are not specified by its children's
        layout parameters. GridFitLayout works like LinearLayout in this case;
        putting all the components either in a single row or in a single column -
        depending on the value of this flag. In the horizontal case, a columnCount
        property may be additionally supplied to force new rows to be created when a
        row is full. The rowCount attribute may be used similarly in the vertical case.
        The default is horizontal.
        -->
        <attr name="orientation">

            <!-- Defines an horizontal widget. -->
            <enum name="horizontal" value="0" />
            <!-- Defines a vertical widget. -->
            <enum name="vertical" value="1" />
        </attr>
        <!-- The maximum number of rows to create when automatically positioning children. -->
        <attr name="rowCount" format="integer" />
        <!-- The maximum number of columns to create when automatically positioning children. -->
        <attr name="columnCount" format="integer" />
        <attr name="dividerSize" format="dimension" />
    </declare-styleable>
    <declare-styleable name="MetroLayout_Layout">

        <!--
              support versions. All attributes not present in MarginLayout are
              redefined in the support library name space.
        -->


        <!-- START MarginLayout layoutparams -->

        <attr name="android:layout_width" />
        <attr name="android:layout_height" />
        <!--
              Specifies extra space on the left, top, right and bottom
              sides of this view. This space is outside this view's bounds.
        -->
        <attr name="android:layout_margin" />
        <!--
              Specifies extra space on the left side of this view.
              This space is outside this view's bounds.
        -->
        <attr name="android:layout_marginLeft" />
        <!--
              Specifies extra space on the top side of this view.
              This space is outside this view's bounds.
        -->
        <attr name="android:layout_marginTop" />
        <!--
              Specifies extra space on the right side of this view.
              This space is outside this view's bounds.
        -->
        <attr name="android:layout_marginRight" />
        <!--
              Specifies extra space on the bottom side of this view.
              This space is outside this view's bounds.
        -->
        <attr name="android:layout_marginBottom" />

        <!-- END MarginLayout layoutparams -->

        <!--
        The row span: the difference between the bottom and top
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridFitLayout.Spec}.
        -->
        <attr name="layout_rowSpan" format="integer" min="1" />
        <!--
        The column span: the difference between the right and left
        boundaries delimiting the group of cells occupied by this view.
        The default is one.
        See {@link android.widget.GridFitLayout.Spec}.
        -->
        <attr name="layout_columnSpan" format="integer" min="1" />
    </declare-styleable>
</resources>